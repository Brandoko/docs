"use strict";(self.webpackChunk_electron_react_boilerplate_site=self.webpackChunk_electron_react_boilerplate_site||[]).push([[875],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(t),d=a,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2360:function(e,n,t){t.d(n,{Z:function(){return i}});var r=t(7294),a=t(6010),o="tabItem_OmH5";function i(e){var n=e.children,t=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:t},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return d}});var r=t(7462),a=t(7294),o=t(2389),i=t(7392),l=t(7094),u=t(2466),s=t(6010),c="tabList_uSqn",p="tabItem_LplD";function m(e){var n,t,o,m=e.lazy,d=e.block,f=e.defaultValue,v=e.values,b=e.groupId,g=e.className,h=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=v?v:h.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),x=(0,i.l)(y,(function(e,n){return e.value===n.value}));if(x.length>0)throw new Error('Docusaurus error: Duplicate values "'+x.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var _=null===f?f:null!=(n=null!=f?f:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(o=h[0])?void 0:o.props.value;if(null!==_&&!y.some((function(e){return e.value===_})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+_+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=(0,l.U)(),O=k.tabGroupChoices,T=k.setTabGroupChoices,w=(0,a.useState)(_),E=w[0],I=w[1],N=[],C=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var S=O[b];null!=S&&S!==E&&y.some((function(e){return e.value===S}))&&I(S)}var j=function(e){var n=e.currentTarget,t=N.indexOf(n),r=y[t].value;r!==E&&(C(n),I(r),null!=b&&T(b,r))},A=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=N.indexOf(e.currentTarget)+1;t=N[r]||N[0];break;case"ArrowLeft":var a=N.indexOf(e.currentTarget)-1;t=N[a]||N[N.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,s.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":d},g)},y.map((function(e){var n=e.value,t=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:E===n?0:-1,"aria-selected":E===n,key:n,ref:function(e){return N.push(e)},onKeyDown:A,onFocus:j,onClick:j},o,{className:(0,s.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":E===n})}),null!=t?t:n)}))),m?(0,a.cloneElement)(h.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==E})}))))}function d(e){var n=(0,o.Z)();return a.createElement(m,(0,r.Z)({key:String(n)},e))}},7292:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=t(9877),l=t(2360),u=["components"],s={id:"ci",title:"Continuous Integration (CI)",sidebar_label:"Continuous Integration (CI)"},c=void 0,p={unversionedId:"ci",id:"ci",title:"Continuous Integration (CI)",description:"All the following configurations work with electron-react-boilerplate.",source:"@site/docs/ci.md",sourceDirName:".",slug:"/ci",permalink:"/docs/ci",draft:!1,editUrl:"https://github.com/electron-react-boilerplate/site/edit/main/docs/ci.md",tags:[],version:"current",frontMatter:{id:"ci",title:"Continuous Integration (CI)",sidebar_label:"Continuous Integration (CI)"},sidebar:"docs",previous:{title:"Component Tests",permalink:"/docs/component-tests"},next:{title:"Electron Store",permalink:"/docs/electron-store"}},m={},d=[],f={toc:d};function v(e){var n=e.components,t=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"All the following configurations work with electron-react-boilerplate."),(0,o.kt)(i.Z,{defaultValue:"travis",values:[{label:"GitHub Actions",value:"gh-actions"},{label:"Travis CI",value:"travis"},{label:"Azure Pipelines",value:"azure"},{label:"AppVeyor",value:"appveyor"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"tavis",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'matrix:\n  include:\n    - os: osx\n      language: node_js\n      node_js:\n        - node\n      env:\n        - ELECTRON_CACHE=$HOME/.cache/electron\n        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder\n    - os: linux\n      language: node_js\n      node_js:\n        - node\n      services:\n        - xvfb\n      addons:\n        apt:\n          sources:\n            - sourceline: "ppa:ubuntu-toolchain-r/test"\n          packages:\n            - gcc-multilib\n            - g++-8\n            - g++-multilib\n            - icnsutils\n            - graphicsmagick\n            - xz-utils\n            - xorriso\n            - rpm\n\nbefore_cache:\n  - rm -rf $HOME/.cache/electron-builder/wine\n\ncache:\n  directories:\n    - node_modules\n    - $(npm config get prefix)/lib/node_modules\n    - $HOME/.cache/electron\n    - $HOME/.cache/electron-builder\n\nbefore_install:\n  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export CXX="g++-8"; fi\n\ninstall:\n  - npm ci\n  # On Linux, initialize "virtual display". See before_script\n  - |\n    if [ "$TRAVIS_OS_NAME" == "linux" ]; then\n      /sbin/start-stop-daemon \\\n      --start \\\n      --quiet \\\n      --pidfile /tmp/custom_xvfb_99.pid \\\n      --make-pidfile \\\n      --background \\\n      --exec /usr/bin/Xvfb \\\n      -- :99 -ac -screen 0 1280x1024x16\n    else\n      :\n    fi\n\nbefore_script:\n  # On Linux, create a "virtual display". This allows browsers to work properly\n  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export DISPLAY=:99.0; fi\n  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sleep 3; fi\n\nscript:\n  - npm run package\n  - npm run lint\n  - npm test\n  - npm test-e2e\n\n'))),(0,o.kt)(l.Z,{value:"azure",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'strategy:\n  matrix:\n    linux:\n      imageName: "ubuntu-16.04"\n      nodeVersion: "13.x"\n    mac:\n      imageName: "macos-10.14"\n      nodeVersion: "13.x"\n    windows:\n      imageName: "windows-2019"\n      nodeVersion: "13.x"\n\npool:\n  vmImage: $(imageName)\n\nsteps:\n  # Set node version\n  - task: NodeTool@0\n    inputs:\n      versionSpec: $(nodeVersion)\n  # Start virtual framebuffer server\n  - bash: |\n      /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &\n      echo ">>> Started xvfb"\n    displayName: Start xvfb\n    condition: and(succeeded(), eq(variables[\'Agent.OS\'], \'Linux\'))\n  # Install deps and run tests\n  - script: npm ci && npm test-all\n    env:\n      DISPLAY: ":99.0"\n  # Generate coverage report\n  - script: npm test --coverage --coverageReporters=cobertura\n  # Publish coverage report\n  - task: PublishCodeCoverageResults@1\n    inputs:\n      codeCoverageTool: Cobertura\n      summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml\n'))),(0,o.kt)(l.Z,{value:"gh-actions",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"name: Test\n\non: push\n\njobs:\n  release:\n    runs-on: ${{ matrix.os }}\n\n    strategy:\n      matrix:\n        os: [macos-10.14, windows-2019, ubuntu-18.04]\n\n    steps:\n      - name: Check out Git repository\n        uses: actions/checkout@v1\n\n      - name: Install Node.js and NPM\n        uses: actions/setup-node@v1\n        with:\n          node-version: 13\n\n      - name: npm install\n        run: |\n          npm install\n\n      - name: npm test\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: |\n          npm run package-ci\n          npm run lint\n          npm run ts\n\n# Failing beacuse virtual framebuffer not installed\n#          npm run build-e2e\n#          npm test-e2e\n"))),(0,o.kt)(l.Z,{value:"appveyor",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"image: Visual Studio 2017\n\nplatform:\n  - x64\n\nenvironment:\n  matrix:\n    - nodejs_version: 13\n\ncache:\n  - node_modules\n  - release/app/node_modules\n  - '%USERPROFILE%\\.electron'\n\nmatrix:\n  fast_finish: true\n\nbuild: off\n\nversion: '{build}'\n\nshallow_clone: true\n\nclone_depth: 1\n\ninstall:\n  - ps: Install-Product node $env:nodejs_version x64\n  - set CI=true\n  - npm ci\n\ntest_script:\n  - npm run package\n  - npm run lint\n  - npm test\n  - npm test-e2e\n\n")))))}v.isMDXComponent=!0}}]);